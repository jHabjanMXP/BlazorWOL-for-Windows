@page "/edit/{DeviceId:guid}"
@inject DeviceService DeviceService
@inject NavigationManager NavigationManager

@if (initialized)
{
    @if (Item != null)
    {
        <DeviceForm Item="Item" OnClickOK="OnClickOK" OnClickDelete="OnClickDelete"></DeviceForm>
    }
    else
    {
        <p class="error-message">Device information not found</p>
    }
}

@code {
    [Parameter]
    public Guid DeviceId { get; set; }

    bool initialized = false;

    Device Item;

    protected override async Task OnInitializedAsync()
    {
        var device = await DeviceService.GetDeviceAsync(DeviceId);
        if (device != null)
        {
            Item = new Device
            {
                Name = device.Name,
                MACAddress = device.MACAddress
            };
        }
        initialized = true;
    }

    async Task OnClickOK(Device editedDevice)
    {
        await DeviceService.UpdateDeviceAsync(DeviceId, editedDevice);
        NavigationManager.NavigateTo(NavigationManager.BaseUri);
    }

    async Task OnClickDelete()
    {
        await DeviceService.DeleteDeviceAsync(DeviceId);
        NavigationManager.NavigateTo(NavigationManager.BaseUri);
    }
}